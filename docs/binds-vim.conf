/* binds-vim.conf
 *
 * This is a binds.conf file which replaces the spmenu dmenu like bindings with Vim inspired keybinds/
 * It is included as an option for more advanced users, or those who like Vim style bindings, because it reenables normal mode.
 */

bind = {
  /* Mouse bindings
   *
   * See https://spmenu.speedie.site/Configurable+keybindings for a list of valid options.
   */
  mouse = (
           /* Click                  Button                  Function                  Argument        */
            { click = "ClickInput";  button = "Left Click";  function = "clear";       argument = "0"; }, // Left click on input: Clear the input
            { click = "ClickPrompt"; button = "Left Click";  function = "clear";       argument = "0"; }, // Left click on prompt: Clear the input
            { click = "ClickMode";   button = "Left Click";  function = "switchmode";  argument = "0"; }, // Left click on the mode indicator: Toggle mode
            { click = "ClickNumber"; button = "Left Click";  function = "viewhist";    argument = "0"; }, // Click on the match count: Toggle viewing history buffer
            { click = "ClickItem";   button = "Left Click";  function = "selecthover"; argument = "0"; }, // Left click on an item: Select it
            { click = "ClickItem";   button = "Right Click"; function = "markhover";   argument = "0"; }, // Right click on an item: Mark it
            { click = "None";        button = "Scroll Up";   function = "moveprev";    argument = "0"; }, // Scroll Up: Move to the previous page
            { click = "None";        button = "Scroll Down"; function = "movenext";    argument = "0"; }, // Scroll Down: Move to the next page

            {
                scrolldistance = 512; // Distance to scroll for a scroll action to count. Wayland only (num)
                ignoreglobalmouse = 1; // Ignore hardcoded mouse binds (0/1)
            } );

  /* Keys
   *
   * It is strongly recommended that you do NOT unbind any switchmode or quit
   * function keybinds unless you know exactly what you're doing.
   * If you ignore this warning and find that you can't exit spmenu,
   * press Ctrl+Alt+Delete. Doing so will exit spmenu, even if no key is bound.
   *
   * Please note that at least on the US standard keyboard layout,
   * `key` will differ if Shift is held down and the key is a number or symbol.
   *
   * See https://spmenu.speedie.site/Configurable+keybindings for a list of valid options.
   */
  keys = (
          /* Mode       Modifier                 Key                Function                      Argument          */
           { mode = -1; modifier = "None";       key = "Enter";     function = "selectitem";      argument = "+1";  },  // Enter: Select item
           { mode = -1; modifier = "Shift";      key = "Enter";     function = "selectitem";      argument = "0";   },  // Shift+Enter: Select input
           { mode = -1; modifier = "Ctrl";       key = "Enter";     function = "markitem";        argument = "0";   },  // Ctrl+Enter: Mark input
           { mode = -1; modifier = "None";       key = "Tab";       function = "complete";        argument = "0";   },  // Tab: Tab complete
           { mode = -1; modifier = "Ctrl";       key = "v";         function = "paste";           argument = "2";   },  // Ctrl+v: Paste from clipboard
           { mode = -1; modifier = "Ctrl+Shift"; key = "v";         function = "paste";           argument = "1";   },  // Ctrl+Shift+v: Paste from selection
           { mode = -1; modifier = "None";       key = "Backspace"; function = "backspace";       argument = "0";   },  // Backspace: Backspace
           { mode = -1; modifier = "Ctrl";       key = "Backspace"; function = "deleteword";      argument = "0";   },  // Ctrl+Backspace: Delete word
           { mode = -1; modifier = "Ctrl";       key = "Left";      function = "moveword";        argument = "-1";  },  // Ctrl+Left: Move caret (cursor) one word to the left
           { mode = -1; modifier = "Ctrl";       key = "Right";     function = "moveword";        argument = "+1";  },  // Ctrl+Right: Move caret (cursor) one word to the right
           { mode = -1; modifier = "None";       key = "Left";      function = "movecursor";      argument = "-1";  },  // Left: Move caret (cursor) one character to the left
           { mode = -1; modifier = "None";       key = "Right";     function = "movecursor";      argument = "+1";  },  // Right: Move caret (cursor) one character to the right
           { mode = -1; modifier = "Ctrl";       key = "k";         function = "setlines";        argument = "+1";  },  // Ctrl+k: Increase lines by 1
           { mode = -1; modifier = "Ctrl";       key = "j";         function = "setlines";        argument = "-1";  },  // Ctrl+j: Decrease lines by 1
           { mode = -1; modifier = "Ctrl";       key = "l";         function = "setcolumns";      argument = "+1";  },  // Ctrl+l: Increase columns by 1
           { mode = -1; modifier = "Ctrl";       key = "h";         function = "setcolumns";      argument = "-1";  },  // Ctrl+h: Decrease columns by 1
           { mode = -1; modifier = "Ctrl+Shift"; key = "p";         function = "setprofile";      argument = "0";   },  // Ctrl+Shift+p: Open profile menu
           { mode = -1; modifier = "None";       key = "PrintScr";  function = "screenshot";      argument = "0";   },  // Print Screen: Screenshot spmenu
           { mode = 1;  modifier = "None";       key = "Esc";       function = "switchmode";      argument = "0";   },  // Escape: Switch mode
           { mode = 1;  modifier = "Ctrl";       key = "r";         function = "toggleregex";     argument = "0";   },  // Ctrl+r: Toggle regex matching
           { mode = 0;  modifier = "None";       key = "i";         function = "switchmode";      argument = "0";   },  // i: Switch mode
           { mode = 0;  modifier = "Ctrl";       key = "=";         function = "setimgsize";      argument = "+10"; },  // Ctrl+=: Increase image size by 10
           { mode = 0;  modifier = "Ctrl";       key = "-";         function = "setimgsize";      argument = "-10"; },  // Ctrl+-: Decrease image size by 10
           { mode = 0;  modifier = "Shift";      key = ")";         function = "defaultimg";      argument = "0";   },  // Shift+0: Set image size to the default
           { mode = 0;  modifier = "None";       key = "o";         function = "setimgpos";       argument = "+1";  },  // o: Toggle image position
           { mode = 0;  modifier = "None";       key = "p";         function = "paste";           argument = "2";   },  // p: Paste from clipboard
           { mode = 0;  modifier = "Ctrl";       key = "1";         function = "setimggaps";      argument = "-10"; },  // Ctrl+1: Decrease image gaps by 10
           { mode = 0;  modifier = "Ctrl";       key = "2";         function = "setimggaps";      argument = "+10"; },  // Ctrl+2: Increase image gaps by 10
           { mode = 0;  modifier = "None";       key = "t";         function = "toggleimg";       argument = "0";   },  // t: Toggle image
           { mode = 0;  modifier = "None";       key = "q";         function = "flipimg";         argument = "1";   },  // q: Flip image horizontally
           { mode = 0;  modifier = "None";       key = "w";         function = "flipimg";         argument = "0";   },  // w: Flip image vertically
           { mode = 0;  modifier = "None";       key = "k";         function = "moveup";          argument = "0";   },  // k: Move up 1 item
           { mode = 0;  modifier = "None";       key = "j";         function = "movedown";        argument = "0";   },  // j: Move down 1 item
           { mode = 0;  modifier = "None";       key = "h";         function = "moveleft";        argument = "0";   },  // h: Move left 1 item
           { mode = 0;  modifier = "None";       key = "l";         function = "moveright";       argument = "0";   },  // l: Move right 1 item
           { mode = 0;  modifier = "Ctrl";       key = "u";         function = "moveup";          argument = "5";   },  // Ctrl+u: Move up 5 items
           { mode = 0;  modifier = "Ctrl";       key = "d";         function = "movedown";        argument = "5";   },  // Ctrl+d: Move down 5 items
           { mode = 0;  modifier = "None";       key = "u";         function = "togglehighlight"; argument = "0";   },  // u: Toggle highlighting
           { mode = 0;  modifier = "Shift";      key = "h";         function = "viewhist";        argument = "0";   },  // Shift+h: Toggle viewing history buffer
           { mode = 0;  modifier = "None";       key = "d";         function = "clear";           argument = "0";   },  // d: Clear the input
           { mode = 0;  modifier = "Shift";      key = "d";         function = "clearins";        argument = "0";   },  // Shift+d: Clear the input and enter insert mode
           { mode = 0;  modifier = "None";       key = "Esc";       function = "quit";            argument = "0";   },  // Esc: Exit
           { mode = 0;  modifier = "None";       key = "g";         function = "movestart";       argument = "0";   },  // g: Move to the start
           { mode = 0;  modifier = "Shift";      key = "g";         function = "moveend";         argument = "0";   },  // Shift+g: Move to the end
           { mode = 0;  modifier = "Ctrl";       key = "p";         function = "navhistory";      argument = "-1";  },  // Ctrl+p: Navigate to the previous entry in the history buffer
           { mode = 0;  modifier = "Ctrl";       key = "n";         function = "navhistory";      argument = "+1";  },  // Ctrl+n: Navigate to the next entry in the history buffer

           { ignoreglobalkeys = 1; // Ignore hardcoded keybinds (0/1)
             forceinsertmode = 0; // Force insert mode, disabling normal mode (0/1)
           } ),
};
